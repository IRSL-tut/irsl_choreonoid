
## TODO
 - attach できるか

 - eusと同じ位置にあるか
 
 - roboasm.l を書き出せるか？ -> eusで読めるか
 // roboasm (yaml形式/)
   -> .roboasm (c++)
   <- .roboasm (c++)
   .roboasm.old.l -> .roboasm (eus) only test
  --->  ここまでできたらいい
   .roboasm -> .roboasm.new.l (eus) 
   <- .roboasm.new.l (eus)
   -> .roboasm.new.l (eus)
   .roboasm.new.l -> .roboasm (eus)

   not required / .roboasm -> .roboasm.old.l (eus)

 - Body loaderを使わずにbodyを作る(shape?)

 - Body fixed-joint込みで全体を作る
 
 - merge links connected with fixed-joint

===> CUIバージョン完成

 - partsの表示

 - connecting-pointの表示

 - robotの表示

 - clickして結合

 --- options

viewAll
SceneWidget.cpp
---
    if(!hasActiveInteractiveCamera()){
        return;
    }
    const BoundingBox& bbox = renderer->scene()->boundingBox();
    if(bbox.empty()){
        return;
    }
---

p <= (make-parts-from-key p-type p-name) create configuretion -> roboasm-parts

arobot <= (make-robot-assembler-robot p :name "")

loop
   p-type  <= (cadr (assoc :parts-type plist)))
   p-name  <= (cadr (assoc :parts-name plist)))
   p-point <= (cadr (assoc :parts-point plist)))
   attach-point <= (cadr (assoc :robot-parts-point plist)))
   config  <= (cadr (assoc :configuration plist)))
   p <= (make-parts-from-key p-type p-name) // create configuretion -> roboasm-parts

   p-p <= (send p :find p-point :active-fixed-points))
   r-p <= (send arobot :find attach-point :active-fixed-points)

   (if (not p) ==> error
   (if (not (and r-p p-p)) ==> error

   ret => (send arobot :attach p
                :parts-point p-p :robot-point r-p
                :attach-configuration (if (eq config :default) nil config))
